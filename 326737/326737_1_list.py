# 326736_1:常见的数据结构----序列
# 1.序列构造：列表是一种存储数据的容器，借助于一对方括号构造列表对象。
# 构成列表的元素没有任何限制，可以是任何类型的数据，也可以是任何结构的数据。
ll = [1, 3.14, False, 'HUAWEI', '2019-05-03', [1, 3, 5, 7]]
list1 = ['张三', '男', 33, '江苏', '硕士', '已婚', ['身高178', '体重72']]
list2 = ['江苏', '安徽', '浙江', '上海', '山东', '山西', '湖南', '湖北']
list3 = [1, 10, 100, 1000, 10000]

# 字符串索引和切片的使用方法在列表上同样适用
list1 = ['张三', '男', 33, '江苏', '硕士', '已婚', ['身高178', '体重72']]
# 取出第一个元素
print(list1[0])
# 取出第四个元素
print(list1[3])
# 取出最后一个元素
print(list1[-1])
# 取出“身高178”这个值
print(list1[-1][0])

list2 = ['江苏', '安徽', '浙江', '上海', '山东', '山西', '湖南', '湖北']
# 取出“浙江”至“山西”四个元素
print(list2[2:6])
# 取出最后三个元素
print(list2[-3:])

# 列表是可变对象：append和extend方法可以实现列表元素的增加，所不同的是append在列表尾部增加一个元素，而extend可以增加多个元素
list3 = [1, 10, 100, 1000, 10000]
# 在列表末尾添加数字2
list3.append(2)
print(list3)
# 在列表末尾添加20,200,2000,20000四个值
list3.extend([20, 200, 2000, 20000])
print(list3)

# 列表的其他方法
# list. count---统计序列中某个元素出现的次数
print(list3.count(20))
# list. index--序列中某个元素的索引位置
print(list3.index(20))
# list. sort--对序列进行排序  ，无参数默认小到大  reserve=true：则设置成由大到小
list3.sort()
print(list3)


# 2.元组的构造
# 元组与列表基本相同，都是属于存储数据的容器，使用一对圆括号可以构造元组对象。
# • 元组同样属于序列。
# • 元组是不可变对象。无法使用append和extend函数增加元素
# • 构造只包含一个元素的元组，需在元组后面加逗号
tt = (1, 3.14, False, 'HUAWEI', '2019-05-03', [1, 3, 5, 7], (10 , 20, 100))
t1 = ('张三', '男', 33, '江苏', '硕士', '已婚', ['身高178', '体重72'])
t2 = ('江苏', '安徽', '浙江', '上海', '山东', '山西', '湖南', '湖北')
t3 = (1, )


# 3.字典的构造
# • 构造字典对象需要使用大括号表示，即{}；
# • 字典元素都是以键值对的形式存在，并且键值对之间用英文状态下的冒号隔开，即key:value
# • 键在字典中是唯一的，不能有重复
dict1 = {'姓名': '张三', '年龄': 33, '性别': '男', '子女': {'儿子': '张四', '女儿': '张美'}, '兴趣': ['踢球', '游泳', '唱歌']}
dict2 = {'电影': ['三傻大闹宝莱坞', '大话西游之大圣娶亲', '疯狂动物城'], '导演': ['拉吉库马尔·希拉尼', '刘镇伟', '拜伦·霍华德 '], '评分': [9.1, 9.2, 9.2]}
# 取出年龄
print(dict1['年龄'])
# 取出子女中的儿子姓名
print(dict1['子女']['儿子'])
# 取出兴趣中的游泳
print(dict1['兴趣'][1])
# 增加身高信息
dict1['身高'] = 178
print(dict1)
# 将年龄改为35
dict1['年龄'] = 35
print(dict1)


